
localStorage.url = "http://www.davidtlane.com/chess/";

requirejs.config({
	baseUrl: 'js/lib',
	paths: {
		util: '../util',
		page: '../pages'
	},
	shim: {
		bootstrap: { deps:['jquery'] }
	}
});

require(['jquery', 'bootstrap', 'util/game_util'], startApp);

function startApp($,bootstrap,$U) {

	var $U = require("util/game_util");

	$(document).on('click','.navbar-collapse.in',function(e) {
		if( $(e.target).is('a') && $(e.target).attr('class') != 'dropdown-toggle' ) {
			$(this).collapse('hide');
		}
	});

	$(document).on('click','.navbar-collapse.in',function(e) {
		if( $(e.target).is('button') && $(e.target).attr('class') != 'dropdown-toggle' ) {
			$(this).collapse('hide');
		}
	});

	$(document).on("click", "a",  function(){
		var href = $(this).attr("href");
		if (href) {
			var newHash = href;
			updateContent(newHash);
		}
	});

	function loggedOut() {
		$("#nav-user").html("Not logged in.");
		$("#nav-login, #nav-signup").show();
		$("#nav-logout, #nav-home, #nav-game").hide();
	}

	function loggedInHome() {
		$("#nav-user").html(localStorage.uid);
		$("#nav-logout, #nav-home").show();
		$("#nav-login, #nav-signup, #nav-game").hide();
	}

	function loggedInGame() {
		$("#nav-user").html(localStorage.uid);
		$("#nav-home, #nav-game").show();
		$("#nav-login, #nav-signup, #nav-logout").hide();
	}

	function hidePopUps() {
		$("#msg-btns, .alert").hide();
	}

	function loadContent(hash) {
		$("#content").html($(hash).html());
	}

	if (window.location.hash) {
		updateContent(window.location.hash);
	} else {
		if (localStorage.uid) {
			window.location.hash="#home";
			updateContent("#home");
		} else {
			window.location.hash="#login";
			updateContent("#login");
		}
	}

	function updateContent(hash) {

		if ( hash=="#login" )
			if (localStorage.uid) localStorage.removeItem("uid");

		if ( hash=="#home" ) {
			if (localStorage.gid) localStorage.removeItem("gid");
			if (localStorage.wht) localStorage.removeItem("wht");
		}

		if (localStorage.uid) {
			if (localStorage.gid)
				loggedInGame();
			else
				loggedInHome();
		} else {
			loggedOut();
		}

		loadContent(hash);

		hidePopUps();

//	LOGIN-------------------------------
		if ( hash=="#login" ) {
			require(["page/login"], function(login) {
				var login = require("page/login");
				$('form#loginForm').submit(login.loginSubmit)
			});

		}
//	SIGNUP-------------------------------
		if ( hash=="#signup" ) {
			require(["page/signup"], function(signup) {
				var signup = require("page/signup");
				$('form#signupForm').submit(signup.signupSubmit)
			});

		}
//	HOME-------------------------------
		if ( hash=="#home" ) {
			require(["page/home"], function() {
			
				var home = require("page/home");
				(function autoGetCurrentGames () {
					$.getJSON(home.url, home.getCurrentGames);
					if (window.location.hash=="#home") setTimeout( autoGetCurrentGames, 5000 );
					console.log('HOME TIMER');
				}) ();
				$('form#findGameForm').submit(home.findGame);

			});

		}
//	BOARD-------------------------------
		if ( hash=="#board" ) {
			require(["page/board"], function(board) {

				var board = require("page/board");

				board.setupBoard();

				function updateBoard () {
					$.getJSON(URL,function(json) {
						if (json.data) {
							if (playerCol!=json.data.curplyr) {
								if (window.location.hash=="#board") setTimeout(updateBoard, 5000);
								console.log('BOARD TIMER');
							} else {
								board.drawPieces(json);
								console.log("My turn...waiting for user event.");
							}
						} else {
							console.log("problem requesting game data");
							setTimeout(updateBoard, 5000);
						}
					});
				}

				function synchUpdate (json) {
					board.drawPieces(json);
					updateBoard();
				}

				function promotion (ev) {
					var btnVal = $(this).html();
					if (btnVal=="Queen") var prom = "Q";
					if (btnVal=="Rook") var prom = "R";
					if (btnVal=="Bishop") var prom = "B";
					if (btnVal=="Knight") var prom = "N";
					var move = ev.data.move + prom;
					var moveURL = URL+"&cmd="+move;
					options = [];
					console.log(move);
					$.getJSON(moveURL,synchUpdate);
				}

				// one move is defined by two clicks: firstMove, secondMove.

				function firstMove (sq) {
					squareId1 = sq.attr("id");
					boardIndex1 = Number(squareId1.replace("sq-",""));
					gamePiece1 = gameBoard[boardIndex1];
					options = $U.getOptions(gameBoard, boardIndex1, playerCol, castling, lastMove);
					if (options.length==0) return
					else {

						sq.addClass("selected options");
						for (var i=0;i<options.length;i++){
							$("#sq-"+options[i]).addClass("options");
						}
					}
				}

				function secondMove (sq) {
					gamePiece2 = gameBoard[boardIndex2];
					// regular move or take?
					if (gamePiece2=="")
						var con = "-";
					else
						var con = "x";
					var move = gamePiece1.slice(1,2) + 
										 $U.boardMap(boardIndex1) + 
										 con + 
										 $U.boardMap(boardIndex2);
					// pawn promotion?
					var prom = "";
					if ( (gamePiece1=="wP" && boardIndex2>55) || (gamePiece1=="bP" && boardIndex2<8) ) {
						$('#myModal').modal('show');
						$(".btn-prom").click({move:move}, promotion);
					} else {
						var moveURL = URL+"&cmd="+move;
						options = [];
						console.log(move);
						$.getJSON(moveURL,synchUpdate);
					}
				}

				function makeMove (ev) {
					ev.preventDefault();
					if (!mayMove) return;
					$(".square").removeClass("selected options");
					if (options.length==0) firstMove($(this));
					else {
						squareId2 = $(this).attr("id");
						boardIndex2 = Number(squareId2.replace("sq-",""));
						if (boardIndex1==boardIndex2) {
							options=[];
							return;
						}
						if ( options.indexOf(boardIndex2)!=-1 ) secondMove($(this));
						else {
							firstMove($(this));
						}
					}
				}

				function specialMoveBtnClicked (ev) { 
					if (window.location.hash!="#board") return;
					if (!mayMove) return;
					var id = $(this).attr("id");
					if (id=="offerDrawBtn") var move = "draw?";
					if (id=="resignBtn") var move = "resigned";
					var moveURL = URL+"&cmd="+move;
					$.getJSON(moveURL,synchUpdate);
				}

				function responseBtnClick (ev) {
					if (window.location.hash!="#board") return;
					if (!mayMove) return;
					var id = $(this).attr("id");
					if (id=="acceptBtn") var move = "accept_draw";
					if (id=="refuseBtn") var move = "refuse_draw";
					$("#msg-btns").hide();
					var moveURL = URL+"&cmd="+move;
					$.getJSON(moveURL,synchUpdate);
				}

				$(".square").click(makeMove);
				$(".spcMove").click(specialMoveBtnClicked);
				$(".respBtn").click(responseBtnClick);


				$.getJSON(URL,synchUpdate);

			});
		}

	}

}

